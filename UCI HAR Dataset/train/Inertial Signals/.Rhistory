10^2+36
a <- 10
a+5
rm(list=ls())
v = c(4,5,8,11)
v
sum(x=v)
sum(v)
mean(x=v)
x = rnorm(100)
plot(x)
quit()
apropos(hist)
apropos('hist')
str(iris)
dim(iris)
?iris
remedial <-
read.csv("/Users/hoggard/Google Drive/Classes/Spring 15/Math 090")
read.csv("/Users/hoggard/Google Drive/Classes/Spring 15/Math 090/AllResults.csv")
remedial
remedial <-
read.csv("/Users/hoggard/Google Drive/Classes/Spring 15/Math 090/AllResults.csv")
remedial
remedial <-
read.csv("/Users/hoggard/Google Drive/Classes/Spring 15/Math 090/AllResults.csv", header=TRUE)
remedial
remedial(1)
remedial
remedial(1)
remedial[1]
remedial[2]
library(ggplot2)
str(mpg)
g <- ggplot(displ, hwy, data=mpg)
g <- ggplot(mpg, aes(displ, hwy))
g + geom_point() + geom_smooth(method="lm")
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method="lm") + facet_grid( . ~ drv)
g + geom_point() + geom_smooth(method="lm") + facet_grid(cyl ~ drv)
?labs
xlab("X label?")
g + geom_point() + geom_smooth(method="lm") + facet_grid(cyl ~ drv) + xlab("X Label")
g + geom_point() + geom_smooth(method="lm") + facet_grid(. ~ drv) + xlab("X Label")
g + geom_point() + geom_smooth(method="lm") + facet_grid(. ~ drv) + labs(xlab ="X Label")
g + geom_point() + geom_smooth(method="lm") + facet_grid(. ~ drv) + theme_bw()
?expression
expression(1+0:9)
expression("log " * PM[2.5])
print(expression("log " * PM[2.5]))
"log "*PM[2.5]
g + geom_point() + geom_smooth(method="lm") + facet_grid(. ~ drv) + theme_bw() + labs(x=expression("log " * x(2)))
g + geom_point() + geom_smooth(method="lm") + facet_grid(. ~ drv) + theme_bw() + labs(x=expression("log " * x[2]))
g + geom_point() + geom_smooth(method="lm") + facet_grid(. ~ drv) + theme_bw() + labs(x=expression("log " * x^2))
g + geom_point() + geom_smooth(method="lm") + facet_grid(. ~ drv) + theme_bw() + labs(x=expression("log " * x_2))
g + geom_point() + geom_smooth(method="lm") + facet_grid(. ~ drv) + theme_bw() + labs(x=expression("log " * x^2)) + theme(base_family="Times")
g + geom_point() + geom_smooth(method="lm") + facet_grid(. ~ drv) + theme_bw() + labs(x=expression("log " * x^2)) + theme_bw(base_family="Times")
?cut
x = rnorm(50)
cut(x)
cut(x, breaks=5)
df <- data.frame(x, cut(x))
df <- data.frame(x, cut(x, breaks =5))
str(df)
df <- data.frame(x, cut(x, breaks =5, labels=1:5))
str(df)
head(df)
hist(df[2])
ggplot(df, aes(x)) + hist()
ggplot(df, aes(x)) + hist(x)
ggplot(df) + hist(x)
ggplot(df, aes(df$x)) + hist(x)
help("ggplot")
ggplot(df) + hist(x)
ggplot(df) + histogram(x)
?hist
?ggplot
ggplot(df)+geom_histogram(x)
ggplot(df)+geom_histogram()
ggplot(df, aes(x))+geom_histogram()
ggplot(df, aes(x))+geom_histogram(binwidth=10)
ggplot(df, aes(x))+geom_histogram(binwidth=20)
ggplot(df, aes(x))+geom_histogram(binwidth=5)
ggplot(df, aes(x))+geom_histogram(binwidth=1)
ggplot(df, aes(x))+geom_histogram(binwidth=.5)
ggplot(df, aes(x))+geom_histogram(binwidth=.2)
ggplot(df, aes(x))+geom_histogram(binwidth=.2, color="steelblue"
)
ggplot(df, aes(x))+geom_histogram(binwidth=.2, fill="steelblue")
?cut
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality$Month
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
?qplot
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
BodyWeight$Diet
library(swirl)
swirl()
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLables.R"), local=TRUE)
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat | color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version == "3.1.1", country="US")
filter(cran, r_version == "3.1.1", country=="US")
?Comparison
filter(cran, r_version <= "3.0.2", country=="IN")
cran
filter(cran, country=="US"| country=="IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
play()
cran3
nxt()
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes=mean(size))
randomBinom <- rbinom(n=20, size=4, prob=.5)
randomBinom
table(randomBinom)
hist(randomBimon)
hist(randomBinom)
randomBinom <- rbinom(n=120, size=4, prob=.5)
hist(randomBinom)
table(randomBinom)
barchart(randomBinom)
hist(randomBinom)
hist(randomBinom, breaks = 4)
hist(randomBinom, breaks = 5)
hist(randomBinom, breaks = 6)
help(hist)
hist(randomBinom, breaks = .5 + -1:5)
?dbinom
dbinom(2, prob=.5, n=4)
dbinom(2, prob=.5, size=4)
dbinom(2, prob=.5, size=2)
dbinom(2, prob=.5, size=1)
dbinom(1, prob=.5, size=1)
dbinom(1:4, prob=.5, size=4)
sum(dbinom(1:4, prob=.5, size=4))
sum(dbinom(0:4, prob=.5, size=4))
dbinom(0:4, prob=.5, size=4)
dbinom(0:4, prob=.5, size=4, log.p=T)
dbinom(0:4, prob=.5, size=4, log=T)
pbinom(2, size=4, prob=.5)
.0625+.25+.375
dbinom(20, size=20, prob=.8)
dbinom(16, size=20, prob=.8)
pbinom(15, size=20, prob=.8)
1-pbinom(14, size=20, prob=.8)
pbinom(14, size=20, prob=.8, lower.tail=FALSE)
1-pnbinom(18, size=1, prob=1/36)
1-pbinom(9, size=10, prob=.5)
1-pbinom(8, size=10, prob=.5)
binom.test(9, 10)
binom.test(9, 10, alternative="greater")
50/6
1-pbinom(16, size=50, prob=1/6)
pbinom(0, size=50, prob=1/6)
a <- 1-pbinom(16, size=50, prob=1/6)
b <- pbinom(0, size=50, prob=1/6)
a+b
binom.test(16, 50, p=1/6)
a <- 1-pbinom(15, size=50, prob=1/6)
a+b
dbinom(16, 50, 1/6)
dbinom(0:5, 50, 1/6)
a<-dbinom(0:5, 50, 1/6)
a[which(a<=.003545752)]
sum(a[which(a<=.003545752)]) + 1-pbinom(15, size=50, prob=1/6)
getwd()
setwd("Google Drive/Classes/Data Science/Clean")
ls
dir()
setwd("Project")
dir()
setwd("UCI HAR Dataset")
dir()
setwd("train")
dir()
Xdf <- read.table("X_train.txt", nrows=10)
ydf <- read.table("y_train.txt", nrows=10)
subdf <- read.table("subject_train.txt", nrows=10)
dir()
setwd("Inertial Signals")
dir()
baxdf <- read.table("body_acc_x_train.txt", nrows=10)
baydf <- read.table("body_acc_y_train.txt", nrows=10)
bazdf <- read.table("body_acc_z_train.txt", nrows=10)
bgxdf <- read.table("body_gyro_x_train.txt", nrows=10)
bgydf <- read.table("body_gyro_y_train.txt", nrows=10)
bgzdf <- read.table("body_gyro_z_train.txt", nrows=10)
taxdf <- read.table("total_acc_x_train.txt", nrows=10)
taydf <- read.table("total_acc_y_train.txt", nrows=10)
tazdf <- read.table("total_acc_z_train.txt", nrows=10)
str(Xdf)
head(str(ydf))
y
y
ydf
dir()
setwd("..")
ydf <- read.table("y_train.txt")
str(ydf)
max(ydf$V1)
table(ydf$V1)
subdf
dir()
subdf <- read.table("subject_train.txt")
subdf
str(subdf)
table(subdf$V1)
str(baxdf)
table(baxdf[1-5])
table(baxdf[1])
max(baxdf[1:10])
min(baxdf[1:10])
max(baxdf)
min(baxdf)
sapply(baxdf, max)
max(sapply(baxdf, max))
min(baxdf)
head(baydf)
max(baydf)
min(baydf)
max(bazdf)
dim(bazdf)
dim(baydf)
dim(baxdf)
dim(bgxdf)
max(bgxdf)
min(bgxdf)
dir()
setwd("Inertial Signals")
dir()
tazdf <- read.table("total_acc_z_train.txt", nrows=10)
dim(tazdf)
max(tazdf)
min(tazdf)
rm(cran)
rm(cran2)
rm(cran3)
rm(airquality)
library(dplyr)
select(baxdf, 1:3)
?tbl_df
testing <- data.frame(baxdf, baydf, bazdf)
dim(testing)
testing <- data.frame("subject" = subdf, Xdf, "activity" = ydf, baxdf, baydf, bazdf, bgxdf, bgydf, bgzdf)
dim(subdf)
testing <- data.frame("subject" = subdf[1:10,], Xdf, "activity" = ydf[1,10,], baxdf, baydf, bazdf, bgxdf, bgydf, bgzdf)
testing <- data.frame("subject" = subdf[1:10,], Xdf, "activity" = ydf[1:10,], baxdf, baydf, bazdf, bgxdf, bgydf, bgzdf)
dim(testing)
names(testing)
v1 <- 1:10
v2 <- v1
data.frame(v1, v2, names=c("", "second"))
rm(testing)
testdf <- data.frame(v1, v2, v1, v2)
str(testdf)
names(testdf)
select(testdf, 1:2)
warnings()
rename(testdf, c("x1", "x2", "x3", "x4"))
testdf
?rename
getwd()
setwd("..")
dir()
setwd("..")
dir()
getwd()
features <- read.table(features.txt)
features <- read.table("features.txt")
str(features)
features <- read.table("features.txt", stringsAsFactors = FALSE)
str(features)
dir()
features[2]
features
features[3]
features[2
]
?read.fwf
features <- read.fwf("features.txt", c(3, 37))
str(features)
features <- read.fwf("features.txt", c(3, 37), stringsAsFactors = FALSE)
str(features)
head(features)
features <- read.table("features.txt", c(3, 37), sep = " ", stringsAsFactors = FALSE)
features <- read.table("features.txt", sep = " ", stringsAsFactors = FALSE)
head(features)
tail(features)
str(features)
?trim
features[560, 2]
featlist <- features[,2]
class(featlist)
head(featlist)
tempXdf <- Xdf
names(tempXdf) <- featlist
str(tempXdf)
head(tempXdf, 1:5)
head(tempXdf[, 1:5])
names(Xdf) <- featlist
?contains
?contain
?containing
temp <- select(Xdf, contains("mean"))
?select
select(Xdf, contains("mean"))
?count
?unique
length(unique(featlist))
length(featlist)
head(featlist, 20)
?make.names
featnames <- make.names(featlist)
length(unique(featlist))
length(unique(featnames))
featnames
?sort
sort(featlist)
duplicated(featlist)
featlist(duplicated(featlist))
featlist[duplicated(featlist)]
sort(featlist[duplicated(featlist)])
length(unique(make.names(featlist)))
make.names(c("a", "a","a"))
?make.names
length(unique(make.names(featlist, unique=TRUE)))
featlist <- make.names(featlist, unique=TRUE)
length(unique(featlist))
names(Xdf) <- featlist
temp <- select(Xdf, contains("mean"))
str(temp)
temp <- select(Xdf, contains("mean") | contains("std"))
select
?select
temp <- select(Xdf, contains("mean") | contains("std" | "mean"))
temp <- select(Xdf, contains("std" | "mean"))
temp <- select(Xdf, contains("std" || "mean"))
temp <- select(Xdf, contains("std") || contains("mean"))
temp <- select(Xdf, c(contains("std"), contains("mean")))
str(temp)
temp <- select(Xdf, c(contains("mean"), contains("std")))
str(temp)
getwd()
dir()
source("../ProcessScript.R")
str(Xdf)
names(Xdf)
fecha<-c("06-jul-2015","06-sep-2012")
as.Date(fecha, format="%d-%b-%Y")
?*version*
R.version.string
as.Date("06-jul.-2015")
as.Date("06-jul.-2015", format="%d-%b-%Y")
as.Date("06-jul.-2015", format="%d-%b.-%Y")
